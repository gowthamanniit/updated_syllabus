Introduction
Environment Setup
React App folder structure
Components Basic- function & class (single modules can't be multiples exports)
one Top level element - grouping
how to use expression? - {}
how to use control statements in react ?
how to change React Default App name?
React Array(basic)
React JSON : basic, nested json, json with array,array with json
React Es-6 -1. Arrow Function (without parameter,with parameter)
            2. var/let/const 
            3. Destructing (array,function,object,nested object)
            4. Array methods Map (loop) 
            5. spread operator 
            6. Ternary operator 
            7. modules(export and import)
            7.1 export & import images,without export image/only import
React render - 2 ways
React JSX
React Components - Advanced
React State (state could only be used in class components)
React props (Argument passing)
React Styling and css
React Forms
React Event Handler
React Life cyle components
HTTP and React (AXIOS)
React Hooks
Integration with other libraries



================expression + control statements in react ==========
function App()
{
  var m1=100
  var m2=99
  var m3=35
  var m4=101
  var m5=100
  return(
    <>
      <h1>{(m1>34 && m2>34 && m3>34 && m4>34 && m5>34 && "PASS") || "FAIL"}</h1>  

      <h2>{(m1>34 && m2>34 && m3>34 && m4>34 && m5>34) && "PASS"}</h2>
      <h2>{(m1<=34 || m2<=34 || m3<=34 || m4<=34 || m5<=34) && "FAIL"}</h2>
    </>
  )
}
export default App

<h2>{a>b && "a is greater"}</h2>
<h2>{b>a && "b is greater"}</h2>
<h2>{a>b && a+" is greater"}</h2>
<h2>{b>a && b+" is greater"}</h2>
===========================Arrow Function + argument or parameter passing=====
function Gowtham()
{
  var disp = () =>{
      document.getElementById("res").innerHTML="Button Clicked:"
  }
  var disp1 = (a,b) =>{
      document.getElementById("res").innerHTML="Button Clicked Total:"+(a+b)
  }

  return(
    <>
      
      <button onClick={disp}>click me</button>
      <button onClick={()=>disp1(11,22)}>click me</button>
      <div id="res"></div>    
      </>
  )
}
export default Gowtham
====================var vs let vs const===================================
var -------> global
let,const---->local
var,let--->change
const------>does not change
==================== destructing=========================================
function Gowtham()
{
  let arithmetic=(a,b)=>{
    const myadd=a+b
    const mysub=a-b
    const mymul=a*b
    const mydiv=a/b
    return [myadd,mysub,mymul,mydiv]

  }
  var arr=[11,22,33,44,55]
  var [v1,v2,,v4,v5]=arr
  var [add,sub,mul,div]=arithmetic(11,22)

  var stud={
        rno:1001,
        sname:"abimanyu",
        mark1:99,
        mark2:45,
        mark3:24
  }
  var emp={
    eno:1009,
    ename:"ajith",
    roll:{
        roll1:'superwising',
        roll2:'checking',
        roll3:'maintance',
        roll4:'packing'
    }
  }
//new model object destructiog
  
  function disp({rno,sname,mark1,mark2,mark3})
  {
    var res="My roll number:"+rno+"<br>My Name:"+sname+"<br>Mark1:"+mark1+"<br>Mark2"+mark2+"<br>Mark3:"+mark3
    document.getElementById("ans").innerHTML=res
  }

  // new model nested object destructing 

  function show({eno,ename,roll:{roll1,roll2,roll3,roll4}})
  {
    var res=eno+"<br>"+ename+"<br>"+roll1+"<br>"+roll2+"<br>"+roll3+"<br>"+roll4
    document.getElementById("ans2").innerHTML=res
  }
  
  
  return(
    <>
    <h2>Destructiong old model</h2>
      <h1>Value:1 {arr[0]}</h1>
      <h1>Value:2 {arr[1]}</h1>
      <h1>Value:3 {arr[2]}</h1>
      <h1>Value:4 {arr[3]}</h1>
      <h1>Value:5 {arr[4]}</h1>
      <h2>New way destructing</h2>
      <h1>value1:{v1}</h1>
      <h1>value2:{v2}</h1>
      <h1>value3:{v4}</h1>      
      <h1>value5:{v5}</h1>
      <h2>Destructing with function</h2>
      <h2>Addition:{add}</h2>
      <h2>Subtracttion:{sub}</h2>
      <h2>Multiplication:{mul}</h2>
      <h2>Division:{div}</h2>
      
      <h2>Destructing object old model</h2>
      <h3>Roll Number:{stud.rno}</h3>
      <h3>Student Name:{stud.sname}</h3>
      <h3>Student Mark1:{stud.mark1}</h3>
      <h3>Student Mark2:{stud.mark2}</h3>
      <h3>Student mark3:{stud.mark3}</h3>
      <h2>Destructing object new model</h2>
      <button onClick={()=>disp(stud)}>clickme</button>
      <button onClick={()=>show(emp)}>clickme</button>
      <div id="ans"></div>
      <div id="ans2"></div>
          </>
  )
}
export default Gowtham
=================================Map method + how to use inline css basic================================
function Gowtham()
{
  var arr=[11,22,233,44,66,99,112]
  var max=arr[0]
  var sum=0
  return(
    <>
        <center>
          <h2>React Loop - Map method</h2>
          </center>
          <ol>{arr.map((item)=><li>{item}</li>)}</ol>
          
           <div style={{display:"none"}}>
            {/* {arr.map((item)=><> {item>max && <>{max=item}</>} </>)} */}
            {arr.map((item)=> item>max && <>{max=item}</>)}
            </div>
          
            <div style={{display:"none"}}>
            {arr.map((item)=>sum=sum+item)}
            </div>
          
            <h1>Max value:{max}</h1>
             <h1>Sum Value:{sum}</h1>

            <h2>Display Even Numbers:</h2>

            {arr.map((item)=>item%2===0 && item+" ")}
        
    </>
  )
}
export default Gowtham
================================== spread operator ... ============
===================================ternary operator=================
==================================module export import==============
modules:
=======
def: break up your code into separate files
use: easy to understand

moudles types:
	1) named (use: variables export and import)
		
		--> in-line individually (multple exports)
			ex:
			mod1.js	
			export const variablename1=value1		
			export const variablename2=value1		
			App.js
			import { variablename1 } from './mod1'
			import { variablename2 } from './mod1'
		--> all at once at bottom
			meaning : only one export
			mod2.js
			const var1=value1
			const var2=value2
			const var3=value3
			export {var1,var2,var3}		
			App.js
			import {var1,var2,var3} from './mod2'
	2) default (ex: component export and import - only one export)		
		create one folder inside src
		create one component either class or function
		export componet
			ex:
			function Vimal()
			{
			return(
			.......
			)
			}
			export default Vimal
		app.js
			import Vimal from './component/filename'

			<vimal/>
============images export import==========================================
ex: D:\notes\abireact\myapp\src\components
commonvar.js

export var accno=1143155000137984
export var ifsc="KVL0001143"
export var aadhar=858415764043
export var myimg2=require("../images/hd2.jpg")  //double dot must


App.js
=======
import { aadhar, accno, ifsc } from "./components/CommonVar"
import myimg1 from "./images/hd4.jpg"--------------------> only import images
import { myimg2 } from "./components/CommonVar" -------------> export and import images

function Gowtham()
{
  return(
      <>
        <h1>MyAadhar:{aadhar}</h1>      
        <h1>Myaccount:{accno}</h1> 
        <h1>IFSC code:{ifsc}</h1>           
        <img src={myimg1} alt="path not found"></img>
        <img src={myimg2} alt="path not found"></img>

      </>
  )
}
export default Gowtham
===================================================================
